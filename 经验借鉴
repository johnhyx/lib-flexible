//借用前辈

这个库的核心函数 refreshRem()。他的功能是：

1.首先获得设备上document元素的宽度值，通过getBoundingClientRect()。

2.这里一开始没看懂，为什么这里非常突兀的出现了一个540的数字？翻看了所有issue后，作者团队给我们解释了（作者原话）：这个540其实是个经验值，或者最大值，这个经验是怎么得出来的呢？
目前主流手机最大的css像素尺寸，是540（比如devicePixelRatio为2，分辨率是1080x1920的手机），所以用了这个经验值。这样可以让在ipad横屏这种情况下浏览无线页面，不至于因为拉伸适配后体验太差。
换句话说，这个540像素值是手机屏幕能到达的最大宽度（在考虑dpr以后），如果有宽度超过540的情况，则说明该网页被显示在 dpr超过1的大屏安卓机、ipad、PC端上。这时候，就使用540这个宽度（代码里是dpr*540，除了iPhone不会有dpr超过1的情况出现，所以基本上就是540）作为默认宽度。然后将屏幕宽度除以10作为rem值（模拟vw/vh实现），应用在document元素上，并且将计算得到的rem值输出到全局变量以供调用。

（图为PC端打开嵌入flexible.js的网页时候的rem和dpr数值）

接下来，通过setTimeOut函数，进行函数节流，监听resize和pageshow事件，执行refreshRem(）函数。
这里有个问题，为什么是监听pageshow事件而不是load事件，这里我查了一下资料，发现对于opera和火狐浏览器，pageshow这个事件会在 后退/前进 这两个动作是也触发，而load事件因为页面已经被加载过，被保存在缓存里，就不会触发了。 所以这里的选择是监听pageshow事件。从细节处见功力啊！

最后给body设置font-size，作者团队也解释了（原话）：
body上设置12 * dpr的font-size值，为了重置页面中的字体默认值，不然没有设置font-size的元素会继承html上的font-size，变得很大。